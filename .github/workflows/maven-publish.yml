# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Jar build

on:
  push:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 
      uses: actions/setup-java@v1
      with:
        java-version: 8
        java-package: jdk+fx
        
    - name: Build with Maven
      run: mvn clean package
      
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ env.RELEASE_VERSION }}
#         release_name: Release ${{ env.RELEASE_VERSION }}
#         draft: false
#         prerelease: false

      
#     - uses: "marvinpinto/action-automatic-releases@latest"
#       with:
#         automatic_release_tag: ${{ env.RELEASE_VERSION }}
#         repo_token: "${{ secrets.GITHUB_TOKEN }}"
#         prerelease: false
#         files: |
#           LICENSE.txt
#           *.jar

  publish-snapshot:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "$RELEASE_VERSION"

      - name: Set up settings.xml for GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk+fx

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} 
        with: 
          tag_name: v${{env.RELEASE_VERSION}}
          release_name: Release V${{env.RELEASE_VERSION}} 

      - name: Update version
        run: mvn -B versions:set -DnewVersion=v${{env.RELEASE_VERSION}} -DgenerateBackupPoms=false

      - name: Publish to GitHub Packages Apache Maven
        run: mvn -B deploy -DskipTests --file pom.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
 
 
